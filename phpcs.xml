<?xml version="1.0"?>
<ruleset name="Coding standards for the BuddyPress REST API plugin">

	<!-- Set a description for this ruleset -->
	<description>Coding standards that will be run on the BuddyPress REST API plugin.</description>

	<config name="encoding" value="utf-8"/>

	<!-- Check code for cross-version PHP compatibility. -->
	<!-- Will check the code compatiblity for PHP greater than 5.6 -->
	<config name="testVersion" value="5.6-"/>

	<!-- Check against minimum WP version. -->
	<config name="minimum_supported_wp_version" value="4.7"/>

	<!-- Load WordPress Coding standards -->
	<rule ref="WordPress"/>
	<rule ref="WordPress-Docs"/>
	<rule ref="WordPress-Extra"/>

	<!-- What to exclude -->
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>

	<!-- What to scan -->
	<file>includes</file>

	<!-- Enable colors in report -->
	<arg name="colors"/>

	<!-- Add source codes in the report -->
	<arg value="psn" />
	<arg name="extensions" value="php"/>
	<arg name="parallel" value="1"/>

	<exclude-pattern>tests/</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/vendor/</exclude-pattern>

	<!-- Remove the class naming error temporarily -->
	<rule ref="WordPress.Files.FileName">
		<properties>
			<property name="strict_class_file_names" value="false"/>
		</properties>
	</rule>

	<rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
		<severity>0</severity>
	</rule>

	<rule ref="WordPress.Arrays.MultipleStatementAlignment.DoubleArrowNotAligned">
		<severity>0</severity>
	</rule>

	<rule ref="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase">
		<severity>0</severity>
	</rule>

	<rule ref="WordPress.NamingConventions.ValidVariableName.NotSnakeCaseMemberVar">
		<severity>0</severity>
	</rule>

	<rule ref="WordPress">
		<exclude name="Generic.Arrays.DisallowShortArraySyntax.Found"/>
	</rule>

</ruleset>
